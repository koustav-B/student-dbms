package Task5;

class Student {
        private String name;
        private String rollNumber;
        private String grade;

        public Student(String name, String rollNumber, String grade) {
                this.name = name;
                this.rollNumber = rollNumber;
                this.grade = grade;
        }

        public String getName() {
                return name;
        }

        public void setName(String name) {
                this.name = name;
        }

        public String getRollNumber() {
                return rollNumber;
        }

        public void setRollNumber(String rollNumber) {
                this.rollNumber = rollNumber;
        }

        public String getGrade() {
                return grade;
        }

        public void setGrade(String grade) {
                this.grade = grade;
        }

        @Override
        public String toString() {
                return name + " (Roll No: " + rollNumber + ", Grade: " + grade + ")";
        }
}
package Task5;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class StudentDatabaseManagementSystem {
    private ArrayList<Student> students = new ArrayList<>();
    private JFrame frame;
    private DefaultListModel<String> studentListModel;
    private JTextField nameField, rollNumberField, gradeField;
    private JButton addButton, editButton, deleteButton;
    private JList<String> studentList;

    public StudentDatabaseManagementSystem() {
        frame = new JFrame("Student Database Management System");
        frame.setSize(400, 400);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        studentListModel = new DefaultListModel<>();
        studentList = new JList<>(studentListModel);
        JScrollPane scrollPane = new JScrollPane(studentList);

        JPanel inputPanel = new JPanel(new GridLayout(4, 2));
        nameField = new JTextField();
        rollNumberField = new JTextField();
        gradeField = new JTextField();
        addButton = new JButton("Add Student");
        editButton = new JButton("Edit Student");
        deleteButton = new JButton("Delete Student");

        inputPanel.add(new JLabel("Name:"));
        inputPanel.add(nameField);
        inputPanel.add(new JLabel("Roll Number:"));
        inputPanel.add(rollNumberField);
        inputPanel.add(new JLabel("Grade:"));
        inputPanel.add(gradeField);
        inputPanel.add(addButton);
        inputPanel.add(editButton);
        inputPanel.add(new JLabel("")); // Empty label for spacing
        inputPanel.add(deleteButton);

        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addStudent();
            }
        });

        editButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                editStudent();
            }
        });

        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteStudent();
            }
        });

        studentList.addListSelectionListener(e -> updateFields());

        frame.setLayout(new BorderLayout());
        frame.add(scrollPane, BorderLayout.CENTER);
        frame.add(inputPanel, BorderLayout.SOUTH);

        frame.setVisible(true);
    }

    private void addStudent() {
        String name = nameField.getText();
        String rollNumber = rollNumberField.getText();
        String grade = gradeField.getText();

        if (!name.isEmpty() && !rollNumber.isEmpty() && !grade.isEmpty()) {
            Student student = new Student(name, rollNumber, grade);
            students.add(student);
            studentListModel.addElement(student.toString());
            clearFields();
        } else {
            JOptionPane.showMessageDialog(frame, "Please fill in all fields.");
        }
    }

    private void editStudent() {
        int selectedIndex = studentList.getSelectedIndex();
        if (selectedIndex >= 0) {
            String name = nameField.getText();
            String rollNumber = rollNumberField.getText();
            String grade = gradeField.getText();

            if (!name.isEmpty() && !rollNumber.isEmpty() && !grade.isEmpty()) {
                Student student = students.get(selectedIndex);
                student.setName(name);
                student.setRollNumber(rollNumber);
                student.setGrade(grade);
                studentListModel.set(selectedIndex, student.toString());
                clearFields();
            } else {
                JOptionPane.showMessageDialog(frame, "Please fill in all fields.");
            }
        } else {
            JOptionPane.showMessageDialog(frame, "Select a student to edit.");
        }
    }

    private void deleteStudent() {
        int selectedIndex = studentList.getSelectedIndex();
        if (selectedIndex >= 0) {
            students.remove(selectedIndex);
            studentListModel.remove(selectedIndex);
            clearFields();
        } else {
            JOptionPane.showMessageDialog(frame, "Select a student to delete.");
        }
    }

    private void clearFields() {
        nameField.setText("");
        rollNumberField.setText("");
        gradeField.setText("5");
        studentList.clearSelection();
    }

    private void updateFields() {
        int selectedIndex = studentList.getSelectedIndex();
        if (selectedIndex >= 0) {
            Student student = students.get(selectedIndex);
            nameField.setText(student.getName());
            rollNumberField.setText(student.getRollNumber());
            gradeField.setText(student.getGrade());
        } else {
            clearFields();
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StudentDatabaseManagementSystem();
            }
        });
    }
}
